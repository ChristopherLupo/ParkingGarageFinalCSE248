package com.example.parkinggaragefinalcse248;

import android.os.Build;

import java.util.ArrayList;
import java.util.Date;

public class Garage {
    private int carCount = 0;
    private int motorCount = 0;
    private int truckCount = 0;

    private ArrayList<ParkingSpot> carList = new ArrayList<>();
    private ArrayList<ParkingSpot> motorList = new ArrayList<>();
    private ArrayList<ParkingSpot> truckList = new ArrayList<>();

    public String addCar(String plate, Boolean early){
        if(carCount == 10){
            return "Too many cars";
        }

        Car car = new Car();
        car.setEarly(early);
        ParkingSpot parkingSpot = new ParkingSpot(plate, car);
        carList.add(parkingSpot);
        carCount ++;
        return "Car was parked at parking spot" + findPlace(plate);
    }

    public String addTruck(String plate, Boolean early){
        if(carCount == 10){
            return "Too many trucks";
        }

        Truck truck = new Truck();
        truck.setEarly(early);
        ParkingSpot parkingSpot = new ParkingSpot(plate, truck);
        truckList.add(parkingSpot);
        truckCount ++;
        return "Truck was parked at parking spot" + findPlace(plate);
    }

    public String addMotot(String plate, Boolean early){
        if(motorCount == 10){
            return "Too many trucks";
        }

        Motorcycle motor = new Motorcycle();
        motor.setEarly(early);
        ParkingSpot parkingSpot = new ParkingSpot(plate,motor);
        motorList.add(parkingSpot);
        motorCount ++;
        return "Truck was parked at parking spot" + findPlace(plate);
    }

    public int findPlace(String plate){
        for (int i =0; i < 10; i++){
            if(plate.equals(carList.get(i).getPlate())){
                return i +1;
            } else if (plate.equals(truckList.get(i).getPlate())){
                return i +1;
            }else if (plate.equals(motorList.get(i).getPlate())){
                return i +1;
            }
        }
        return 0;
    }

    public ParkingSpot removePlace(String plate){
        ParkingSpot spot = new ParkingSpot(null, null);
        for (int i =0; i < 10; i++){
            if(plate.equals(carList.get(i).getPlate())){
                spot = carList.get(i);
                carList.remove(i);
                carCount--;
                return spot;
            } else if (plate.equals(truckList.get(i).getPlate())){
                spot = truckList.get(i);
                truckList.remove(i);
                truckCount--;
                return spot;
            }else if (plate.equals(motorList.get(i).getPlate())){
                spot = motorList.get(i);
                motorList.remove(i);
                motorCount--;
                return spot;
            }
        }
        return null;
    }

    public double price(ParkingSpot parkingSpot){
        Date current = new Date();
        Date old = parkingSpot.getDate();
        double price = 0;

        if(parkingSpot.getVehicle().isEarly() == true){
            return parkingSpot.getVehicle().getEarlyPrice();
        }

        Long time = current.getTime() - old.getTime();
        double hours = (double) time / 3600000;

        if(hours % 1 > .001){
            price = Math.round(hours) +1;
        }else{
            price = Math.round(hours);
        }

        return price * parkingSpot.getVehicle().getPricePerHour();

    }


}
